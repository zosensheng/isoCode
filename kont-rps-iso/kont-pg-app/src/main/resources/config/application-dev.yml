spring:
  rabbitmq:
    # rabbitmq 服务地址
    addresses: ${rabbitmq.addresses:192.168.1.184:5672}
    virtualHost: /lemon
    # 用户名
    username: admin
    # 密码
    password: ${rabbitmq.password:admin123}
    requestedHeartbeat: 10
    #    publisherConfirms: true
    #    publisherReturns: true
    connectionTimeout: 10000
    cache:
      channel:
        size: 5
    listener:
      concurrency: 1
      maxConcurrency: 5
      idleEventInterval: 60000
      prefetch: 10
      transactionSize: 10

  cloud:
    consul:
      host: 192.168.1.184
      port: 8500
      discovery:
        hostname: ${spring.cloud.client.ip-address}
        instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}
        service-name: ${spring.application.name}-app
        #check失败后，多少秒后删除本服务
        health-check-critical-timeout: 30s
        #显示ip地址
        prefer-ip-address: true

  redis:
    database: 0
    host: ${redis.host:192.168.1.184}
    port: 6379
    #password : ${redis.password:Redis123}
    #password:
    pool:
      #连接池最大连接数（使用负值表示没有限制）
      max-active: 8
      #连接池最大阻塞等待时间（使用负值表示没有限制）
      max-wait: 10000
      # 连接池中的最大空闲连接
      max-idle: 8
      # 连接池中的最小空闲连接
      min-idle: 1
    #连接超时时间（毫秒）
    timeout: 10000
    #默认缓存过期时间(秒)
    default-expiration: 600

  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: oracle.jdbc.driver.OracleDriver
    url: jdbc:oracle:thin:@192.168.1.139:1521/ORCLPDB1
    username: PGMX_DEV
    password: Hisun11
    druid:
      initialSize: 5
      minIdle: 5
      maxActive: 20
      maxWait: 60000
      timeBetweenEvictionRunsMillis: 60000
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 'x' FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
#      filters: stat,wall,log4j
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      monitor:
        loginUsername: druid
        loginPassword: druid123

#Multiple dataSources
data-source:
  kont:
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.1.184:3306/kont_dev?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT%2B8
    username: kont_dev
    password: Hisun.11
    initialSize: 5
    minIdle: 5
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 30000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 'x' FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#    filters: stat,wall,log4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: true
  primary:
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: oracle.jdbc.driver.OracleDriver
    url: jdbc:oracle:thin:@192.168.1.139:1521/ORCLPDB1
    username: PG_DEV
    password: Hisun011
    initialSize: 5
    minIdle: 5
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 'x' FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#    filters: stat,log4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: true

#tag描述查数据库或者查redis的开关 false 为查数据库  true 查redis数据
switch:
  redisFlag: false
#sit环境是TRCKCHZ0XXX    uat环境是TRCKCHZZXXX
tracker:
  bicCode: TRCKCHZ0XXX

fegin:
  pyrmUrl: http://192.168.1.183:8780
  pgUrl:
  igwUrl: http://192.168.1.183:8771
#  服务器
#  pyUrl: http://192.168.1.214:8100
#  本地
#  pyUrl: http://192.168.239.170:8100
  #  本地
  pyUrl: http://127.0.0.1:8100


batch:
  out: /rps/iff/batc/out/
  in: /rps/iff/batc/in/
  tempIn: /rps/iff/temp/in/
  tempOut: /rps/iff/temp/out/
  tempBak: /rps/iff/temp/bak/
report:
  template:
    path: /rps/iff/
  output:
    path: /rps/iff/out/
  csv:
    path: /rps/iff/in/
iff:
  PAQQO1: \\rps\\
containerID:
  tx: com.rps.pyrm.tx:TX:1.0.21
  ir: com.rps.pyrm.ir:IR:1.0.21
  or: com.rps.pyrm.or:OR:1.0.21
server:
  ssl:
    key-trust-store: /rps/config/teip_keystore.jks
    key-trust-password: password
sslkey:
  keyPath: /rps/config/teip_keystore.jks
  keyPassword: password
mail:
  smtp: R5_EDP_12.bocgroup.com
  username: 01201@r5.bochk.com
  password:
  fromUser: 01201@r5.bochk.com
  toUser: 01201@r5.bochk.com,01202@r5.bochk.com,01203@r5.bochk.com,01204@r5.bochk.com,01205@r5.bochk.com
config-attributes:
  reqMapProps:
    'RMCTRX07': com.hisun.kont.igw.dto.RMC08ReqDto
    'RMCTRX18': com.hisun.kont.igw.dto.RMC13ReqDto
    '006030': com.hisun.kont.igw.dto.BOC01ReqDto
    '020050': com.hisun.kont.igw.dto.BOC02ReqDto
    '001050': com.hisun.kont.igw.dto.BOC03ReqDto
    '001030': com.hisun.kont.igw.dto.BOC04ReqDto
    '025030': com.hisun.kont.igw.dto.BOC05ReqDto
    '025050': com.hisun.kont.igw.dto.BOC06ReqDto
    '020030': com.hisun.kont.igw.dto.BOC07ReqDto
    '006050': com.hisun.kont.igw.dto.BOC08ReqDto
  mapProps:
    'RMCTRX18': com.hisun.kont.igw.dto.RMC13RspDto
    '00000001': com.hisun.kont.igw.dto.ErrorDto
    'RMCTRX01': com.hisun.kont.igw.dto.RMC02RspDto
    'RMCTRX02': com.hisun.kont.igw.dto.RMC09RspDto
    'RMCTRX07  ': com.hisun.kont.igw.dto.RMC08RspDto
    'RMCTRX08': com.hisun.kont.igw.dto.RMC07RspDto
    '000440': com.hisun.kont.igw.dto.BOC20RspDto
    'BOCACCOUNT': com.hisun.kont.igw.eai.dto.BocAccountRspDTO
    '006030    ': com.hisun.kont.igw.dto.BOC01ReqDto

  tarTxnList: ['001050','025050','19222','020050','001030','020030','025030','006050']
picture:
  path:
eaiConfig:
  tellerID: "0000000"
emp:
  empUrl: https://uempweb.bocgroup.com:8443/Empserver/servlet/Empservlet
  empKeyPath: /rps/config/rps_client_keystore.jks
  empKeyPass: password
exchRate:
  exchRateFlag:

baffleFlag: N

test:
  userID: "8848921"
bankCode: "012"
mq:
  path: /rps/config/MQ-Sender-Configure.xml